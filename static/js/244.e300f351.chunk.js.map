{"version":3,"file":"static/js/244.e300f351.chunk.js","mappings":"qPAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+LAYXE,EAAYF,EAAAA,GAAAA,OAAH,uJ,SCXTG,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAQ3B,OACE,SAAC,KAAD,CAAQC,cAAe,CAAEC,MAAO,IAAMF,SARnB,SAAC,EAAD,GAA+B,IAA5BE,EAA2B,EAA3BA,MAAWC,EAAgB,EAAhBA,UACnB,KAAVD,IAEJF,EAASE,GACTC,IACD,EAGC,UACE,UAAC,KAAD,YACE,SAACR,EAAD,CAAaS,KAAK,OAAOC,KAAK,WAC9B,SAACP,EAAD,CAAWM,KAAK,SAAhB,wBAIP,E,UCsBD,EArCe,WAAO,IAAD,EACnB,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEhDC,EAAAA,EAAAA,YAAU,WACW,KAAfF,GAEJG,EAAAA,GAAuBH,GAAYI,KAAKR,EACzC,GAAE,CAACI,IAMJ,OACE,6BACE,SAACb,EAAD,CAAYC,SANK,SAAAE,GACnBS,EAAgB,CAAET,MAAAA,GACnB,IAMIK,IACC,wBACGA,EAAOU,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAK,iBAAD,OAAmBV,IAFlC,SAIGM,EAAMK,SALFL,EAAME,GADA,QAc1B,C,4MCtCDI,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BV,GAA9B,uFACkBI,IAAAA,IAAA,gBAAmBJ,EAAnB,oBAAiCK,IADnD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BX,GAA9B,uFACkBI,IAAAA,IAAA,gBAAmBJ,EAAnB,4BAAyCK,IAD3D,cACCE,EADD,yBAEEA,EAASC,KAAKI,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCb,GAAjC,uFACkBI,IAAAA,IAAA,gBAAmBJ,EAAnB,4BAAyCK,IAD3D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAkChC,GAAlC,uFACkBsB,IAAAA,IAAA,6BACCtB,EADD,oBACkBuB,IAFpC,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/movies-api.js"],"sourcesContent":["import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledField = styled(Field)`\n  width: 300px;\n  min-height: 30px;\n  margin-bottom: 20px;\n  border: 1px solid #dfd8d8;\n  border-radius: 5px;\n\n  :focus {\n    outline: 2px solid #ff6347;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  width: 80px;\n  height: 30px;\n  margin-left: 5px;\n  border: 1px solid #dfd8d8;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport { StyledField, SearchBtn } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = ({ query }, { resetForm }) => {\n    if (query === '') return;\n\n    onSubmit(query);\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ query: '' }} onSubmit={handleSubmit}>\n      <Form>\n        <StyledField type=\"text\" name=\"query\" />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Form>\n    </Formik>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { SearchForm } from '../components/SearchForm/SearchForm';\nimport * as API from '../services/movies-api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieTitle = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (movieTitle === '') return;\n\n    API.fetchMoviesByQuery(movieTitle).then(setMovies);\n  }, [movieTitle]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={handleSubmit} />\n\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={`${movie.id}`}\n                state={{ from: `/movies?query=${movieTitle}` }}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f6301fd4418791e86cee5ab1a6c319ce';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n"],"names":["StyledField","styled","Field","SearchBtn","SearchForm","onSubmit","initialValues","query","resetForm","type","name","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieTitle","get","useEffect","API","then","map","movie","to","id","state","from","title","axios","API_KEY","fetchTrending","response","data","results","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesByQuery"],"sourceRoot":""}