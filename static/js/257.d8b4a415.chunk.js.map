{"version":3,"file":"static/js/257.d8b4a415.chunk.js","mappings":"iQAEaA,EAAYC,EAAAA,GAAAA,OAAH,iMAaTC,EAAeD,EAAAA,GAAAA,IAAH,wDAKZE,EAAaF,EAAAA,GAAAA,GAAH,4F,SC6CvB,EA5DqB,WAAO,IAAD,IACzB,GAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAM7C,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAmBP,GAASQ,KAAKT,EAClC,GAAE,CAACC,KAGF,yBACGF,IACC,iCACE,SAACL,EAAD,WACE,SAAC,KAAD,CAAMgB,GAAIP,EAAV,qCAEF,UAACP,EAAD,YACE,gBACEe,IAAG,0CAAqCZ,EAAMa,aAC9CC,IAAKd,EAAMe,MACXC,MAAM,SAER,4BACE,0BACGhB,EAAMe,MADT,KACkBf,EAAMiB,aAAaC,MAAM,EAAG,GAD9C,QAGA,wCAAgBC,KAAKC,MAA2B,GAArBpB,EAAMqB,cAAjC,QACA,sCACA,uBAAIrB,EAAMsB,YACV,oCACA,SAACxB,EAAD,UACGE,EAAMuB,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADM,aAM7B,mBAEA,kDACA,2BACE,yBACE,SAAC,KAAD,CAAMhB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,mBAEA,SAAC,EAAAiB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAMX,C,4MC7DDC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BT,GAA9B,uFACkBG,IAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCI,IADnD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BV,GAA9B,uFACkBG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,IAD3D,cACCE,EADD,yBAEEA,EAASC,KAAKI,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCZ,GAAjC,uFACkBG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,IAD3D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACkBX,IAAAA,IAAA,6BACCW,EADD,oBACkBV,IAFpC,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GoBackBtn = styled.button`\n  margin-bottom: 20px;\n  padding: 0;\n  cursor: pointer;\n\n  a {\n    display: inline-block;\n    padding: 5px;\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 10px;\n  list-style: none;\n  padding: 0;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport * as API from 'services/movies-api';\nimport { GoBackBtn, MovieWrapper, GenresList } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    API.fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <div>\n      {movie && (\n        <>\n          <GoBackBtn>\n            <Link to={backLinkHref}>ðŸ”™ Go back</Link>\n          </GoBackBtn>\n          <MovieWrapper>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              width=\"240\"\n            />\n            <div>\n              <h2>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </h2>\n              <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <GenresList>\n                {movie.genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </GenresList>\n            </div>\n          </MovieWrapper>\n          <hr />\n\n          <p>Aditional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <hr />\n\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f6301fd4418791e86cee5ab1a6c319ce';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n"],"names":["GoBackBtn","styled","MovieWrapper","GenresList","useState","movie","setMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","API","then","to","src","poster_path","alt","title","width","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","axios","API_KEY","fetchTrending","response","data","results","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesByQuery","query"],"sourceRoot":""}